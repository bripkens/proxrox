worker_processes             1;

error_log                    /tmp/nginx-logs/error.log info;

pid                          /tmp/nginx-logs/nginx.pid;

events {
  worker_connections         1024;
}

http {
  include                    mime.types;
  default_type               application/octet-stream;

  sendfile                   on;
  keepalive_timeout          65;
  client_max_body_size       0;
  client_body_temp_path      /tmp/proxrox/clientBody;
  proxy_temp_path            /tmp/proxrox/proxy;

  log_format                 standard_format
                             '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $bytes_sent '
                             '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  server {
    listen                   8080;
    server_name              example;

    access_log               /tmp/nginx-logs/access.log standard_format buffer=32k;
    log_not_found            on;
    log_subrequest           on;

    ssi                      on;
    ssi_silent_errors        off;

    location / {
      proxy_pass             http://127.0.0.1:3000;
      proxy_cache            off;
      proxy_set_header       X-Real-IP $remote_addr;
      proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header       Accept-Encoding "";
    }

    location /cms {
      proxy_pass             http://127.0.0.1:8080;
      proxy_cache            off;
      proxy_set_header       X-Real-IP $remote_addr;
      proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header       Accept-Encoding "";
    }

    location /api {
      proxy_pass             http://api.example.com;
      proxy_cache            off;
      proxy_set_header       X-Real-IP $remote_addr;
      proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header       Accept-Encoding "";
    }

    error_page               500 502 503 504 /50x.html;
    location = /50x.html {
      root                   html;
    }
  }
}
